"""Added apartment, rental info tables

Revision ID: 376f1b92f5fc
Revises: 57406e875881
Create Date: 2025-07-07 16:29:41.440677

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '376f1b92f5fc'
down_revision: Union[str, Sequence[str], None] = '57406e875881'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('apartment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('description', sa.String(length=1500), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('currency', sa.Enum('AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTN', 'BWP', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'FOK', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KID', 'KMF', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRU', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLE', 'SLL', 'SOS', 'SRD', 'SSP', 'STN', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TVD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VES', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW', 'ZWL', name='currency_enum', native_enum=False), nullable=False),
    sa.Column('listing_type', sa.Enum('RENT', 'SALE', name='listing_type_enum', native_enum=False), nullable=False),
    sa.Column('address', sa.String(length=150), nullable=True),
    sa.Column('city', sa.String(length=150), nullable=False),
    sa.Column('muncipality', sa.String(length=150), nullable=True),
    sa.Column('postal_code', sa.String(length=150), nullable=True),
    sa.Column('latitude', sa.Numeric(precision=9, scale=6), nullable=True),
    sa.Column('longtitude', sa.Numeric(precision=9, scale=6), nullable=True),
    sa.Column('total_area', sa.Float(), nullable=False),
    sa.Column('total_area_measured', sa.Float(), nullable=True),
    sa.Column('bedroom_count', sa.Integer(), nullable=True),
    sa.Column('bathroom_count', sa.Integer(), nullable=True),
    sa.Column('floor_number', sa.Integer(), nullable=True),
    sa.Column('total_floors', sa.Integer(), nullable=True),
    sa.Column('condition', sa.Enum('NEW', 'RENOVATED', 'GOOD', 'NEEDS_RENOVATION', name='condition_enum', native_enum=False), nullable=True),
    sa.Column('furnished', sa.Boolean(), nullable=True),
    sa.Column('orientation', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('heating_type', sa.Enum('CENTRAL', 'FLOOR', 'GAS', 'ELECTRIC', 'HEAT_PUMP', 'NONE', name='heating_type_enum', native_enum=False), nullable=False),
    sa.Column('air_conditioning', sa.Boolean(), nullable=False),
    sa.Column('has_elevator', sa.Boolean(), nullable=False),
    sa.Column('has_terrace', sa.Boolean(), nullable=True),
    sa.Column('private_parking', sa.Boolean(), nullable=True),
    sa.Column('basement', sa.Boolean(), nullable=True),
    sa.Column('deposit_required', sa.Boolean(), nullable=False),
    sa.Column('utilities_included', sa.Boolean(), nullable=False),
    sa.Column('monthly_utilities_cost', sa.Integer(), nullable=True),
    sa.Column('ownership_type', sa.Enum('PRIVATE', 'SOCIAL', 'COOPERATIVE', name='ownership_type_enum', native_enum=False), nullable=False),
    sa.Column('pets_allowed', sa.Boolean(), nullable=True),
    sa.Column('smoking_allowed', sa.Boolean(), nullable=True),
    sa.Column('available_from', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_rented', sa.Boolean(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rental_info',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('apartment_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['apartment_id'], ['apartment.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rental_info')
    op.drop_table('apartment')
    # ### end Alembic commands ###
